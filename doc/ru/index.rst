:orphan:

.. sidebar:: Следующие открытые тренинги

   - `Professionelles Testen für Python mit pytest <https://www.enterpy.de/lecture_compact1.php?id=12713>`_ (German), part of the enterPy conference, April 22nd, remote.

   См. также `previous talks and blogposts <talks.html>`_.

.. _features:

pytest: помогает вам писать лучшие программы
=============================================

.. module:: pytest

Фреймворк ``pytest`` позволяет легко писать небольшие, читабельные тесты и может
масштабироваться для поддержки сложного функционального тестирования приложений и библиотек.


**Версии Python**: ``pytest`` требует: Python 3.6, 3.7, 3.8, 3.9, or PyPy3.

**Имя пакета в PyPI**: `pytest <https://pypi.org/project/pytest/>`_

**Документация в PDF**: `скачать последнюю <https://media.readthedocs.org/pdf/pytest/latest/pytest.pdf>`_


Небольшой пример
------------------

.. code-block:: python

    # листинг test_sample.py
    def inc(x):
        return x + 1


    def test_answer():
        assert inc(3) == 5


Запустим его:

.. code-block:: pytest

    $ pytest
    =========================== test session starts ============================
    platform linux -- Python 3.x.y, pytest-6.x.y, py-1.x.y, pluggy-0.x.y
    cachedir: $PYTHON_PREFIX/.pytest_cache
    rootdir: $REGENDOC_TMPDIR
    collected 1 item

    test_sample.py F                                                     [100%]

    ================================= FAILURES =================================
    _______________________________ test_answer ________________________________

        def test_answer():
    >       assert inc(3) == 5
    E       assert 4 == 5
    E        +  where 4 = inc(3)

    test_sample.py:6: AssertionError
    ========================= short test summary info ==========================
    FAILED test_sample.py::test_answer - assert 4 == 5
    ============================ 1 failed in 0.12s =============================

Из-за детальной интроспекции утверждений в ``pytest`` используются только простые утверждения ``assert``.
Смотрите :ref:`Начало <getstarted>` для базового введения в использование pytest.


Функции
--------

- Подробная информация о упавших :ref:`assert(утверждениях) <assert>` (нет необходимости запоминать имена ``self.assert*``)

- :ref:`Автообнаружение <test discovery>` тестовых модулей и функций

- :ref:`Модульные фикстуры <fixture>` для управления небольшими или параметризованными долгоживущими тестовыми ресурсами

- Возможность запуска :ref:`unittest <unittest>` (включая пробные) и :ref:`nose <noseintegration>` тестовых наборов из коробки.

- Python 3.6+ и PyPy 3

- Богатая архитектура плагинов, с более чем 800+ :ref:`внешних плагинов <plugin-list>` и растущим сообществом


Документация
-------------

* :ref:`Начало <get-started>` - установите pytest и разберитесь с его основами всего за двадцать минут
* :ref:`Пошаговые руководства <how-to>` - пошаговые руководства, охватывающие широкий спектр вариантов использования и потребностей
* :ref:`Справочные руководства <reference>` - включает полный справочник по API pytest, списки плагинов и многое другое
* :ref:`Объяснение <explanation>` - подготовка, обсуждение ключевых тем, ответы на вопросы более высокого уровня


Запросы/ошибки
---------------

Пожалуйста, используйте `Систему отслеживания проблем в GitHub <https://github.com/pytest-dev/pytest/issues>`_
для отправки сообщения об ошибках или запроса новой функциональности.


Журнал изменений
-------------------

Обратитесь к странице :ref:`Журнал изменений <changelog>` для исправлений и улучшений каждой версии.

Поддержка pytest
-----------------

`Open Collective`_ - это онлайн-платформа финансирования для открытых и прозрачных сообществ.
Она предоставляет инструменты для привлечения денег и обмена финансами в условиях полной прозрачности.

Это платформа, которую выбирают частные лица и компании, желающие делать единовременные или
ежемесячные пожертвования непосредственно на проект.

Более подробную информацию можно найти в `pytest collective`_.

.. _Open Collective: https://opencollective.com
.. _pytest collective: https://opencollective.com/pytest


pytest для предприятия
-----------------------

Доступно как часть подписки Tidelift.

Сопровождающие pytest и тысячи других пакетов сотрудничают с Tidelift, чтобы обеспечить коммерческую поддержку и
сопровождение зависимостей с открытым исходным кодом, которые вы используете для создания своих приложений.
Экономьте время, снижайте риски и улучшайте качество кода, платя при этом сопровождающим именно тех зависимостей, которые вы используете.
`Узнать больше. <https://tidelift.com/subscription/pkg/pypi-pytest?utm_source=pypi-pytest&utm_medium=referral&utm_campaign=enterprise&utm_term=repo>`_

Безопасность
~~~~~~~~~~~~~~

pytest никогда не был связан с уязвимостью безопасности, но в любом случае, для сообщения об уязвимости
в системе безопасности, пожалуйста, воспользуйтесь контактом `Tidelift security contact <https://tidelift.com/security>`_.
Tidelift будет координировать исправление и раскрытие информации.


Лицензия
---------

Авторское право Holger Krekel и другие, 2004-2021.

Распространяется на условиях лицензии `MIT`_, pytest является свободным программным обеспечением с открытым исходным кодом.

.. _`MIT`: https://github.com/pytest-dev/pytest/blob/main/LICENSE
