.. _`noseintegration`:

Как запускать тесты, написанные для nose
===========================================

В ``pytest`` есть базовая поддержка для запуска тестов написанных для nose_.

.. _nosestyle:

Использование
---------------

После установки :ref:`installation` вводите:

.. code-block:: bash

    python setup.py develop  # убедитесь, что тесты могут импортировать наш пакет
    pytest  # вместо 'nosetests'

и вы сможете запускать свои тесты в стиле nose и использовать возможности pytest.

Поддержка nose идиом
----------------------

* setup и teardown на уровне модуля/класса/метода
* исключения SkipTest и маркеры
* декораторы setup/teardown
* атрибут ``__test__`` в модуле/классе/функции
* общее использование nose утилит

Не поддерживаемые идиомы / известные проблемы
------------------------------------------------

- стиль unittest ``setUp, tearDown, setUpClass, tearDownClass``
  признаются только в классах ``unittest.TestCase``, но не в простых классах.
  ``nose`` поддерживает эти методы также в простых классах, но
  pytest намеренно этого не делает. Как nose так и pytest уже оба поддерживают
  ``setup_class, teardown_class, setup_method, teardown_method`` и
  не кажется полезным дублировать unittest-API, как это делает nose.
  Если вы, однако, думаете, что pytest должен поддерживать проверку правописания unittest в простых
  классах, опубликуйте здесь `to this issue
  <https://github.com/pytest-dev/pytest/issues/377/>`_.

- nose импортирует тестовые модули с тем же путем импорта(например
  ``tests.test_mode``), но разные пути в файловой системе
  (например ``tests/test_mode.py`` и ``other/tests/test_mode.py``)
  расширяя семантику sys.path/import. pytest не делает это,
  но есть обсуждение в `#268 <https://github.com/pytest-dev/pytest/issues/268>`_ для добавления поддержки.  Обратите внимание, что
  `nose2 choose to avoid this sys.path/import hackery <https://nose2.readthedocs.io/en/latest/differences.html#test-discovery-and-loading>`_.

  Если вы поместите файл conftest.py в корневой каталог вашего проекта (как определено в pytest), pytest
  будет запускать тесты в стиле nose для кода ниже этого каталога, добавляя его в ваш ``sys.path`` вместо
  запуска вопреки вашего установленного кода.

  Вы можете захотеть это сделать, если вы запустите ``python setup.py install``
  для настройки вашего проекта, в отличие от ``python setup.py develop`` или любой из
  эквивалентов диспетчера пакетов. Вместо этого шаблона рекомендуется установка с develop
  в виртуальной среде, такой как tox.

- doctest в стиле nose не собираются и не выполняются правильно,
  также фикстуры doctest не работают.

- конфигурации nose не распознается.

- ``yield``-методы не поддерживаются с pytest 4.1.0. Они принципиально несовместимы с pytest, потому
  что они не поддерживают фикстуры должным образом, так как сборка и выполнение теста разделены.

Миграция из nose в pytest
------------------------------

`nose2pytest <https://github.com/pytest-dev/nose2pytest>`_ - это скрипт Python и плагин pytest,
помогающие преобразовать тесты на основе nose в тесты на основе pytest. В частности, скрипт преобразует
вызовы функции nose.tools.assert_* в необработанные операторы assert, максимально сохраняя формат
исходных аргументов.

.. _nose: https://nose.readthedocs.io/en/latest/
